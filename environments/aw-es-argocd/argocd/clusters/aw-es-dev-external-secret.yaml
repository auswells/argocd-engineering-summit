apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: cluster-aw-es-dev
spec:
  refreshInterval: 1h           # rate SecretManager pulls GCPSM
  secretStoreRef:
    kind: ClusterSecretStore
    name: gcpsm                 # name of the SecretStore (or kind specified)
  target:
    name: cluster-aw-es-dev     # name of the k8s Secret to be created
    creationPolicy: Owner
    # Specify a blueprint for the resulting Kind=Secret
    template:
      type: Opaque
      metadata:
        labels:
          argocd.argoproj.io/secret-type: cluster

      # Use inline templates to construct your desired config file that contains your secret
      data:
        name: "{{ .name }}"
        server: "{{ .server }}"
        config: |
          {
            "bearerToken": "{{ .token }}",
            "tlsClientConfig": {
              "insecure": false,
              "caData": "{{ .certificate }}"
            }
          }
  data:
    - secretKey: name
      remoteRef:
        key: cluster-aw-es-dev
        property: name
    - secretKey: server
      remoteRef:
        key: cluster-aw-es-dev
        property: server
    - secretKey: token
      remoteRef:
        key: cluster-aw-es-dev
        property: token
    - secretKey: certificate
      remoteRef:
        key: cluster-aw-es-dev
        property: certificate
